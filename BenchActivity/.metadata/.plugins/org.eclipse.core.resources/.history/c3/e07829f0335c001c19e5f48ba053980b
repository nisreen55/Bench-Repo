package com.benchActivity;

public class AlmostPalindrome 
{
	static boolean isPalindrome(String str, int low, int high, boolean almost)
	{
		while (low < high)
		{
			//if (str.charAt(low) != str.charAt(high))
			if (!almost)
				return false;
			low++;
			high--;
}
return true;
}
	static int possiblePalinByRemovingOneChar(String str)
    {
 
        // Initialize low and right
        // by both the ends of the string
        int low = 1, high = str.length() - 2;
        int begin = 0, end = str.length() - 1;
        boolean almost = false;
        if (str.charAt(begin) != str.charAt(end))
        {
            almost = true;
            
        }
        // loop until low and
        // high cross each other
        while (low < high)
        {
 
            // If both characters are equal then
            // move both pointer towards end
        	
            if (str.charAt(low) == str.charAt(high))
            {
                low++;
                high--;
            }
            else
            {
 
                /*
                * If removing str[low] makes the
                * whole string palindrome. We basically
                * check if substring str[low+1..high]
                * is palindrome or not.
                */
                if (isPalindrome(str, low + 1, high, almost))
                    return low;
 
                /*
                * If removing str[high] makes the whole string
                * palindrome. We basically check if substring
                * str[low+1..high] is palindrome or not.
                */
                if (isPalindrome(str, low, high - 1, almost))
                    return high;
                return -1;
            }
        }
 
        // We reach here when complete string
        // will be palindrome if complete string
        // is palindrome then return mid character
        return -2;
    }
 
	public static void main(String[] args) 
	{
		String str = "abcdcbg";
	    int idx = possiblePalinByRemovingOneChar(str);
	 
	    if (idx == -1)
	       System.out.println("Not Possible");
	    else if (idx == -2)
	       System.out.println("Possible without " +
	                        "removing any character");
	    else
	       System.out.println("Possible by removing" +
	                            " character at index " + idx);
	    
	}
}

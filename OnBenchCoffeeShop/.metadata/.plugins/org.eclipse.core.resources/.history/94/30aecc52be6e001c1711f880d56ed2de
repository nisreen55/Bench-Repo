package com.bench;

import java.util.Arrays;
import java.util.List;

public class CoffeeShop 
{
	private String Name = "Happy Meal";
	private MenuItems menuItems;
	public String[] orders = new String[20];

	
	public String[] menuItemsFood = {"Fried chicken", "Burgers", "Chicken soup", "Spaghetti with meatballs", "Mashed potatoes",
									"Mac & cheese"};
	public String[] menuItemsDrink = {"Orange Juice", "Grape Juice", "Coke"};

	private String[] tempFood = new String[10];
	private String[] tempDrink = new String[10];
	
	public CoffeeShop( ) {
		super();
	}
	
	public CoffeeShop(String name, MenuItems menuItems, String[] orders) {
		super();
		Name = name;
		this.menuItems = menuItems;
		this.orders = orders;
	}
	
	
	public String getName() {
		return Name;
	}

	public void setName(String name) {
		Name = name;
	}

	public MenuItems getMenuItems() {
		return menuItems;
	}

	public void setMenuItems(MenuItems menuItems) {
		this.menuItems = menuItems;
	}

	public String[] getOrders() {
		return orders;
	}

	public void setOrders(String[] orders) {
		this.orders = orders;
	}

	public String[] addOrder(int customerOrder, int customerItemType) 
	{
		App app = new App();
		if(customerItemType == 1)
		{
			List<MenuItems> food = app.addFoodtems();
			//String itemType = food..getMenuItemType();
			//String itemName = menuItems.getMenuItemType().get(customerOrder-1);
			//System.out.println(itemName);
			int itemsNum =orders.length;
				
			for(int i = 0; i < itemsNum; i++)
			{
				if (orders[i] == null)
				{
					orders[i] = food.get(i).getMenuItemName();
					for(int j = 0; j < tempFood.length; j++)
						if (tempFood[j] == null)
						{
							tempFood[j] = food.get(i).getMenuItemName();
							break;
						}
					System.out.println("printing inside addOrder "+orders[i] + " index:" + i);
					break;
				}
			}
		}
		if(customerItemType == 2)
		{
			List<MenuItems> drink = app.addDrinktems();
			System.out.println("test"+drink);
			//String itemName = menuItemsDrink[customerOrder-1];
			//System.out.println(itemName);
			int itemsNum =orders.length;
				
			for(int i = 0; i < itemsNum; i++)
			{
				if (orders[i] == null)
				{
					//orders[i] = drink.get(i).getMenuItemName();
					for(int k = 0; k < drink.size(); k++)
						orders[i] = drink.get(k).getMenuItemName();

					for(int j = 0; j < tempDrink.length; j++)
						if (tempDrink[j] == null)
						{
							tempDrink[j] = drink.get(i).getMenuItemName();
							
							break;
						}
					System.out.println("printing inside addOrder "+orders[i] + " index:" + i);
					break;
				}
			}
		}
		return orders;
	}

	public String[] listOrder() 
	{
		return orders;
	}
	
	public String[] drinkOnly() 
	{
		return 	tempDrink;
	}
	
	public String[] foodOnly() 
	{
		return tempFood;
	}
	@Override
	public String toString() {
		return "CoffeeShop [Name=" + Name + ", menuItems=" + Arrays.toString(menuItemsFood) + ", orders="
				+ Arrays.toString(orders) + "]";
	}

	
	
	
	
	
}
